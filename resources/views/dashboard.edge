@layout('layouts/masterauth')
@set('title', 'GESTACO - Dashboard')
@set('menuActive', 'dashboard')
@section('content')
<main class="w-full flex-grow p-6">
    <h1 class="text-3xl text-black dark:text-white pb-6">Dashboard</h1>

    <div class="flex flex-wrap mt-6">
        <div class="w-full lg:w-1/2 pr-0 lg:pr-2">
            <p class="text-xl pb-3 flex items-center dark:text-white">
                <i class="fas fa-plus mr-3"></i> Produtos mais vendidos
            </p>
            <div class="p-6 bg-white dark:bg-dark-dark">
                <canvas id="productsChart" width="400" height="200"></canvas>
            </div>
        </div>
        <div class="w-full lg:w-1/2 pl-0 lg:pl-2 mt-12 lg:mt-0">
            <p class="text-xl pb-3 flex items-center dark:text-white">
                <i class="fas fa-check mr-3"></i> Faturamento mensal
            </p>
            <div class="p-6 bg-white dark:bg-dark-dark">
                <canvas id="billingsChart" width="400" height="200"></canvas>
            </div>
        </div>
    </div>
    <div class="w-full mt-12">
        <p class="text-xl pb-3 flex items-center dark:text-white">
            <i class="fas fa-list mr-3"></i> Clientes que mais compraram
        </p>
        <div class="overflow-x-auto">
            <table class="min-w-full leading-normal">
                <thead>
                    <tr>
                        <th class="w-1/3 px-5 py-3 border-b-2 border-gray-200 bg-gray-100 dark:border-none dark:bg-gray-800 text-left text-xs font-semibold text-gray-600 dark:text-white uppercase tracking-wider">Nome</th>
                        <th class="px-5 py-3 border-b-2 border-gray-200 bg-gray-100 dark:border-none dark:bg-gray-800 text-left text-xs font-semibold text-gray-600 dark:text-white uppercase tracking-wider">Telefone</th>
                        <th class="px-5 py-3 border-b-2 border-gray-200 bg-gray-100 dark:border-none dark:bg-gray-800 text-left text-xs font-semibold text-gray-600 dark:text-white uppercase tracking-wider">Email</th>
                        <th class="px-5 py-3 border-b-2 border-gray-200 bg-gray-100 dark:border-none dark:bg-gray-800 text-left text-xs font-semibold text-gray-600 dark:text-white uppercase tracking-wider">CPF</th>
                        <th class="px-5 py-3 border-b-2 border-gray-200 bg-gray-100 dark:border-none dark:bg-gray-800 text-left text-xs font-semibold text-gray-600 dark:text-white uppercase tracking-wider">Valor</th>
                    </tr>
                </thead>
                <tbody>
                    @each(client in clientsChart)
                      <tr>
                        <td class="w-1/3 px-5 py-3 border-b border-gray-200 dark:border-none bg-white dark:bg-dark-light text-sm"><p class="text-gray-900 dark:text-white whitespace-no-wrap">{{client.name}}</p></td>
                        <td class="px-5 py-3 border-b border-gray-200 dark:border-none bg-white dark:bg-dark-light text-sm"><a class="text-gray-900 dark:text-white whitespace-no-wrap hover:text-blue-500 dark:hover:text-blue-500 transition-all" href="tel:{{client.phone}}">{{client.phone ?? '-'}}</a></td>
                        <td class="px-5 py-3 border-b border-gray-200 dark:border-none bg-white dark:bg-dark-light text-sm"><a class="text-gray-900 dark:text-white whitespace-no-wrap hover:text-blue-500 dark:hover:text-blue-500 transition-all" href="mailto:{{client.email}}">{{client.email ?? '-'}}</a></td>
                        <td class="px-5 py-3 border-b border-gray-200 dark:border-none bg-white dark:bg-dark-light text-sm"><p class="text-gray-900 dark:text-white whitespace-no-wrap">{{client.document ?? '-'}}</p></td>
                        <td class="px-5 py-3 border-b border-gray-200 dark:border-none bg-white dark:bg-dark-light text-sm"><p class="text-gray-900 dark:text-white whitespace-no-wrap">{{client.formattedTotal ?? '-'}}</p></td>
                    </tr>
                    @endeach
                </tbody>
            </table>
        </div>
    </div>
</main>
<script>
    var productsChart = document.getElementById('productsChart');
    var myChart = new Chart(productsChart, {
        type: 'bar',
        data: {
            labels: ({{{ JSON.stringify(productsChart) }}}).map(product => product.name),
            datasets: [{
                label: 'Quantidade',
                data: ({{{ JSON.stringify(productsChart) }}}).map(product => product.total),
                backgroundColor: [
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 206, 86, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(255, 159, 64, 0.2)'
                ],
                borderColor: [
                    'rgba(255, 99, 132, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)'
                ],
                borderWidth: 1
            }]
        },
        options: {
            tooltips: {
                intersect: false,
                displayColors: false,
                displayColors: false,
            },
            hover: {
                mode: 'index',
                intersect: false
            },
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true
                    }
                }]
            }
        }
    });

    var billingsChart = document.getElementById('billingsChart');
    var myLineChart = new Chart(billingsChart, {
        type: 'line',
        data: {
            labels: Object.keys({{{ JSON.stringify(billingsChart) }}}).map(period => period),
            datasets: [{
                label: 'R$',
                lineTension: 0,
                data: Object.keys({{{ JSON.stringify(billingsChart) }}}).map(period => ({{{ JSON.stringify(billingsChart) }}})[period] / 100),
                backgroundColor: 'rgba(255, 99, 132, 0.2)',
                borderColor: 'rgba(255, 99, 132, 1)',
                borderWidth: 1
            }]
        },
        options: {
            tooltips: {
                mode: 'index',
                intersect: false,
                displayColors: false,
                callbacks: {
                    label: function({yLabel}) {
                        const formatter = new Intl.NumberFormat('pt-br', {
                            style: 'currency',
                            currency: 'BRL',
                            minimumFractionDigits: 2,
                            maximumFractionDigits: 2,
                        });

                        const formattedTotal = formatter.format((yLabel * 100).toFixed(0) / 100);

                        return formattedTotal;
                    }
                }
            },
            hover: {
                mode: 'index',
                intersect: false
            },
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true,
                        callback: function(value, index, values) {
                            return 'R$ '+ value;
                        }
                    }
                }]
            }
        }
    });
</script>
@endsection